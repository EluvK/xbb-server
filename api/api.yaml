openapi: 3.0.0
info:
  title: XBB API
  version: 1.0.0
tags:
  - name: User
    description: User API
  - name: Repo
    description: Repo API
  - name: Post
    description: Post API
paths:
  /users:
    get:
      tags:
        - User
      summary: Get all users
      responses:
        '200':
          description: A list of users
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /users/{id}:
    get:
      tags:
        - User
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - User
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      tags:
        - User
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted

  /repos:
    get:
      tags:
        - Repo
      summary: Get all repositories
      responses:
        '200':
          description: A list of repositories
    post:
      tags:
        - Repo
      summary: Create a new repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repo'
      responses:
        '201':
          description: Repository created
  /repos/{id}:
    get:
      tags:
        - Repo
      summary: Get a repository by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A repository object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repo'
    put:
      tags:
        - Repo
      summary: Update a repository by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repo'
      responses:
        '200':
          description: Repository updated
    delete:
      tags:
        - Repo
      summary: Delete a repository by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Repository deleted

  /posts:
    get:
      tags:
        - Post
      summary: Get all posts
      responses:
        '200':
          description: A list of posts
    post:
      tags:
        - Post
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created
  /posts/{id}:
    get:
      tags:
        - Post
      summary: Get a post by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A post object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      tags:
        - Post
      summary: Update a post by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post updated
    delete:
      tags:
        - Post
      summary: Delete a post by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        password:
          type: string
        avatar_url:
          type: string
    Repo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        description:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        repo_id:
          type: string